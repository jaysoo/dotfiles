module CustomOutputs
  module MigrateStagedCustomOutputs
    def self.migrate
      PgTools.for_each_schema do
        CustomOutput.where("right(name, 8) = '[staged]'").each do |staged_custom_output|
          existing_name = staged_custom_output.name[0..-9].rstrip
          existing_custom_output = CustomOutput.scoped_by(staged_custom_output.site).where(name: existing_name).first

          if existing_custom_output.nil?
            next
          end

          if staged_custom_output.output_type != existing_custom_output.output_type
            puts "[Site: #{staged_custom_output.site_id}] #{staged_custom_output.name} has a different output_type from #{existing_custom_output.name} and was not migrated"
            next
          end

          custom_output_mapping_column = "#{existing_custom_output.output_type}_custom_output_id"
          custom_output_mapping = CustomOutputMapping.where("#{custom_output_mapping_column} = #{existing_custom_output.id}").first

          existing_custom_output.update_attributes! name: "#{existing_name} [backup]"
          staged_custom_output.update_attributes! name: existing_name, active: true

          custom_output_mapping[custom_output_mapping_column] = staged_custom_output.id
          custom_output_mapping.save

          puts "[Site: #{staged_custom_output.site_id}] Migrated custom output #{existing_name}"
        end
      end
    end
  end
end
