      SELECT *,
        COALESCE(suggested_people_danger, 0) as suggested_people
      FROM job_productivity_13866259559409_26004 AS base
      LEFT JOIN (    SELECT
      ai.assembly_procedure_id as ap_id, sum(ai.suggested_people) as suggested_people_danger
    FROM assembly_steps as ai
    WHERE ai.assembly_procedure_id IN (:ap_ids)
    GROUP BY ai.assembly_procedure_id
) AS ai_query USING (ap_id)
      LEFT JOIN (    SELECT
      job_id,
      person_hours,
      number_of_personnel,
      day,
      month,
      labor_expense_without_breaks
    FROM
      (SELECT
        t.job_id AS job_id,
        COUNT (distinct t.badge_code) as number_of_personnel,
        date_trunc('day', MIN(t.started_at) AT TIME ZONE sites.timezone) AS day,
        date_trunc('month', MIN(t.started_at) AT TIME ZONE sites.timezone) AS month,
        EXTRACT(EPOCH FROM SUM(COALESCE(t.ended_at, now() AT TIME ZONE 'UTC') - t.started_at) ) / 3600 AS person_hours,
        EXTRACT(EPOCH FROM SUM((COALESCE(t.ended_at, now() AT TIME ZONE 'UTC')- t.started_at) * t.cost_per_hour)) / 3600 AS labor_expense_without_breaks
      FROM time_reports AS t
      LEFT JOIN badge_types AS bt ON bt.id = t.badge_type_id
      LEFT JOIN sites ON sites.id = t.site_id
      WHERE t.job_id = t.job_id AND t.badge_type_id = bt.id AND bt.machine = false AND
        t.job_id IN (:job_ids)
      GROUP BY t.job_id, sites.timezone) as potrq
) AS personnel_only_time_reports_query USING (job_id)
      LEFT JOIN (    SELECT
      time_reports.job_id AS job_id,
      EXTRACT(EPOCH FROM SUM(LEAST(COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'),
      COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))-GREATEST(time_reports.started_at, breaks.started_at))) / 3600 AS unpaid_hours
    FROM
      time_reports, breaks, badge_types as bt, downtime_reasons as dr
    WHERE
      time_reports.job_id = time_reports.job_id AND time_reports.job_id = breaks.job_id AND dr.paid = false AND
      dr.id = breaks.downtime_reason_id AND
      time_reports.job_id IN (:job_ids) AND breaks.job_id IN (:job_ids) AND
      time_reports.badge_type_id = bt.id AND bt.machine = false AND
      (time_reports.started_at, COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'))
        OVERLAPS (breaks.started_at, COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))
    GROUP BY time_reports.job_id
) AS unpaid_hours_query USING (job_id)
      LEFT JOIN (    SELECT
      time_reports.job_id AS job_id,
      EXTRACT(EPOCH FROM SUM(LEAST(COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'),
      COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))-GREATEST(time_reports.started_at, breaks.started_at))) / 3600 AS break_hours
    FROM
      time_reports, breaks, badge_types as bt
    WHERE
      time_reports.job_id = time_reports.job_id AND time_reports.job_id = breaks.job_id AND
      time_reports.badge_type_id = bt.id AND bt.machine = false AND
      time_reports.job_id IN (:job_ids) AND breaks.job_id IN (:job_ids) AND
      (time_reports.started_at, COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'))
      OVERLAPS (breaks.started_at, COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))
    GROUP BY
      time_reports.job_id
) AS break_hours_query USING (job_id)
      LEFT JOIN (    SELECT
      job_id,
      machine_hours,
      machine_expense_without_breaks
    FROM
      (SELECT
        t.job_id AS job_id,
        EXTRACT(EPOCH FROM SUM(COALESCE(t.ended_at, now() AT TIME ZONE 'UTC') - t.started_at) ) / 3600 AS machine_hours,
        EXTRACT(EPOCH FROM SUM((COALESCE(t.ended_at, now() AT
 TIME ZONE 'UTC')- t.started_at) * t.cost_per_hour)) / 3600 AS machine_expense_without_breaks
      FROM time_reports AS t, badge_types as bt
      WHERE t.job_id = t.job_id AND t.badge_type_id = bt.id AND bt.machine = true AND t.job_id IN (:job_ids)
      GROUP BY t.job_id) as motrq
) as machine_only_time_reports_query USING (job_id)
      LEFT JOIN (    SELECT
      time_reports.job_id AS job_id,
      EXTRACT(EPOCH FROM SUM(LEAST(COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'),
      COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))-GREATEST(time_reports.started_at, breaks.started_at))) / 3600 AS machine_break_hours
    FROM
      time_reports, breaks, badge_types as bt
    WHERE
      time_reports.job_id = breaks.job_id AND
      time_reports.badge_type_id = bt.id AND bt.machine = true AND
      time_reports.job_id IN (:job_ids) AND breaks.job_id IN (:job_ids) AND
      (time_reports.started_at, COALESCE(time_reports.ended_at, now() AT TIME ZONE 'UTC'))
      OVERLAPS (breaks.started_at, COALESCE(breaks.ended_at, now() AT TIME ZONE 'UTC'))
    GROUP BY
      time_reports.job_id
) AS machine_break_hours_query USING (job_id)
      LEFT JOIN (    SELECT
      job_id,
      actual_end_at,
      number_of_time_reports
    FROM
      (SELECT
        t.job_id AS job_id,
        count (t.id) as number_of_time_reports,
        MAX(COALESCE(t.ended_at, now() AT TIME ZONE 'UTC')) as actual_end_at
      FROM
        time_reports AS t
      WHERE
        t.job_id IN (:job_ids)
      GROUP BY t.job_id) as atrq
) AS all_time_reports_query USING (job_id)
       ORDER BY actual_start_at desc, job_id asc, job_id

