describe("Quoting.QuoteChargeItemsCtrl", function() {
  var QuoteChargeItemsCtrl = require("Quoting.QuoteChargeItemsCtrl")
  var ChargeItem = require("Quoting.ChargeItem")

  var ctrl, scope

  beforeEach(inject(function($rootScope){
    scope = $rootScope

    var quote = {
      id: 1,
      chargeItems: [new ChargeItem({id: 0, name: 'Charge1'})]
    }
    var quotesRepo = new Stub({})

    ctrl = new QuoteChargeItemsCtrl(quote, quotesRepo, scope.$new())
  }))

  describe('#onChargeItemAdded', function(){
    it("adds charge item to list of charges", function(){
      var item = new ChargeItem({name: 'New Charge'})

      ctrl.onChargeItemAdded({}, item)
      expect(_.last(ctrl.chargeItems).name).toEqual('New Charge')
    })

    it("isEditing of new item should be false", function(){
      var item = new ChargeItem({name: 'New Charge'})

      ctrl.onChargeItemAdded({}, item)
      expect(ctrl.isEditing(item)).toBe(false)
    })
  })

  describe("#deleteChargeItem", function(){
    it("removes charge item", function(){
      var item = ctrl.chargeItems[0]

      ctrl.deleteChargeItem(item)

      expect(ctrl.chargeItems).toEqual([])
    })
  })

  describe('#switchToEdit', function(){
    it('switches to edit mode', function(){
      var item = ctrl.chargeItems[0]
      ctrl.switchToEdit(item)
      expect(ctrl.isEditing(item)).toBe(true)
    })
  })

  describe('#switchToShow', function(){
    it('switches to show mode', function(){
      var item = ctrl.chargeItems[0]
      ctrl.switchToShow(item)
      expect(ctrl.isEditing(item)).toBe(false)
    })
  })

  describe('#totalCostPerUnit', function() {
    it('sums up cost per unit for all charge items', function() {
      ctrl.chargeItems = [
        {costPerUnit: 1},
        {costPerUnit: 2},
        {costPerUnit: 3},
        {costPerUnit: 4}
      ]

      var total = ctrl.totalCostPerUnit()

      expect(total).toEqual(10)
    })
  })
})
