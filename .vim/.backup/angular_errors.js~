define("AngularErrors", function (module) {

  var m = angular.module('nuErrors', [])

  m.directive("nuErrorsFullMessages", function(){
    return {
      restrict: 'A',
      templateUrl: "common/full_messages",
      replace: true,
      scope: {
        nuErrorsFullMessages: '='
      }
    }
  })

  m.factory('nuErrorMessageForModel', function() {
    var messages = {
      required: I18n.s_('FORM_ERRORS|This is required.')
    }

    return function(model) {
      return _.chain(model.$error)
        .map(function(v, k) {
          if (v)
            return messages[k]
          else
            return null
        })
        .compact()
        .first()
    }
  })

  m.directive("nuErrorsInline", [
    'nuErrorMessageForModel',

    function(errorMessageForModel) {
      return {
        restrict: 'A',

        require: 'ngModel',

        link: function ($scope, element, attrs, ngModel) {
          element.attr("title", '');
          element.attr("data-tooltip-class", "error");
          element.tooltip({trigger: 'manual'})

          $scope.$watch(attrs.ngModel, function() {
            if (!ngModel.$dirty) return

            var error = errorMessageForModel(ngModel)

            if (error) {
              element.attr("title", error);
              element.addClass("error");
              element.tooltip('show');
            } else {
              element.attr("title", '');
              element.removeClass("error");
              element.tooltip('destroy');
            }
          });
        }
      }
    }
  ])

  m.directive("nuErrorsFocus", ["$timeout", function($timeout){
    return {
      restrict: 'A',

      link: function ($scope, element, attrs) {
        $scope.$watch(attrs.nuErrorsFocus, function (errors) {
          $timeout(function(){
            if(errors){
              element.find("input.error").first().focus();
            } else {
              element.find("input[type=text]").first().focus()
            }
          })
        });
      }
    }
  }])

  m.factory("nuErrorCallback", ["$q", function($q){
    return function(func){
      return function(xhrResponse){
        return $q.reject(func(xhrResponse.data))
      }
    }
  }])

  module.exports = m
})
